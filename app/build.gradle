plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlinx-serialization'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

apply from: "$rootProject.projectDir/android-common.gradle"

android {
    defaultConfig {
        applicationId "com.grappim.weatherninetwothree"
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_OPEN_WEATHER", "\"https://api.openweathermap.org/\"")
        buildConfigField("String", "OPEN_WEATHER_API_KEY", openweather_api_key)
        buildConfigField("String", "OPEN_WEATHER_ICON", '\"https://openweathermap.org/img/wn/\"')

        buildConfigField("String", "GEOAPIFY_API_KEY", geoapify_api_key)
        buildConfigField("String", "GEOAPIFY_API_HOST", "\"https://api.geoapify.com/v1/\"")
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
    }
}

dependencies {
    implementation(project(":core:ui"))

    implementation deps.kotlin.coroutines
    implementation deps.kotlin.serialization

    implementation deps.timber

    implementation deps.androidx.core
    implementation deps.androidx.appcompat
    implementation deps.androidx.constraintLayout
    implementation deps.androidx.fragment
    implementation deps.androidx.startup
    implementation deps.androidx.swiperefresh
    implementation deps.androidx.recyclerview

    implementation deps.google.material

    implementation deps.flowbinding

    implementation deps.lifecycle.livedata
    implementation deps.lifecycle.viewmodel
    implementation deps.lifecycle.runtime

    implementation deps.navigation.fragment
    implementation deps.navigation.ui

    implementation deps.google.hiltandroid
    kapt deps.google.hiltcompiler

    implementation 'nl.bryanderidder:themed-toggle-button-group:1.4.1'

    def okhttp = "5.0.0-alpha.7"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    def chucker_version = "3.5.2"
    debugImplementation "com.github.chuckerteam.chucker:library:$chucker_version"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$chucker_version"

    implementation deps.coil
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

    def junit_version = '4.13.2'
    def ext_junit_version = '1.1.3'
    def espresso_version = '3.4.0'
    def coroutines_test_version = '1.6.2'
    def mockito_kotlin_version = '4.0.0'
    def mockito_android_version = '4.3.1'
    def turbine = '0.8.0'
    def android_core_testing = '2.1.0'

    def mockk = '1.12.4'
    testImplementation "io.mockk:mockk:${mockk}"
    testImplementation "io.mockk:mockk-agent-jvm:${mockk}"
    androidTestImplementation "io.mockk:mockk-android:${mockk}"
    androidTestImplementation "io.mockk:mockk-agent-jvm:${mockk}"

    def kluent = '1.68'
    testImplementation "org.amshove.kluent:kluent-android:${kluent}"

    // Test
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    testImplementation "androidx.arch.core:core-testing:$android_core_testing"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp"
    testImplementation "app.cash.turbine:turbine:$turbine"

    // Android Test
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.arch.core:core-testing:$android_core_testing"
    androidTestImplementation "org.mockito:mockito-android:$mockito_android_version"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
}